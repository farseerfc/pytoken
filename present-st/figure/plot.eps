%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot.tex
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Fri Oct 14 18:06:57 2011
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (farseer)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Oct 14 18:06:57 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
946 704 M
63 0 V
5794 0 R
-63 0 V
946 1213 M
63 0 V
5794 0 R
-63 0 V
946 1722 M
63 0 V
5794 0 R
-63 0 V
946 2231 M
63 0 V
5794 0 R
-63 0 V
946 2740 M
63 0 V
5794 0 R
-63 0 V
946 3248 M
63 0 V
5794 0 R
-63 0 V
946 3757 M
63 0 V
5794 0 R
-63 0 V
946 4266 M
63 0 V
5794 0 R
-63 0 V
946 4775 M
63 0 V
5794 0 R
-63 0 V
946 704 M
0 63 V
0 4008 R
0 -63 V
1783 704 M
0 63 V
0 4008 R
0 -63 V
2619 704 M
0 63 V
0 4008 R
0 -63 V
3456 704 M
0 63 V
0 4008 R
0 -63 V
4293 704 M
0 63 V
0 4008 R
0 -63 V
5130 704 M
0 63 V
0 4008 R
0 -63 V
5966 704 M
0 63 V
0 4008 R
0 -63 V
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
946 4775 N
946 704 L
5857 0 V
0 4071 V
-5857 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
LT0
1405 1032 Pls
1049 783 Pls
1023 768 Pls
1324 994 Pls
1157 872 Pls
1278 934 Pls
1001 762 Pls
1022 774 Pls
1187 878 Pls
1233 949 Pls
1005 788 Pls
1114 839 Pls
1154 874 Pls
1105 817 Pls
1016 772 Pls
1059 803 Pls
1013 762 Pls
1343 992 Pls
1290 956 Pls
1282 954 Pls
1220 895 Pls
1954 1397 Pls
1971 1399 Pls
1771 1271 Pls
1310 960 Pls
995 752 Pls
4314 3390 Pls
1035 786 Pls
949 726 Pls
950 726 Pls
953 728 Pls
1016 769 Pls
1268 954 Pls
1056 808 Pls
1138 829 Pls
1095 821 Pls
1221 893 Pls
2607 2059 Pls
1011 764 Pls
1002 759 Pls
1081 808 Pls
1781 1348 Pls
1904 1460 Pls
5658 4102 Pls
1949 1407 Pls
1031 781 Pls
1133 852 Pls
1293 952 Pls
1339 1027 Pls
2038 1431 Pls
964 735 Pls
1762 1368 Pls
1140 847 Pls
1035 779 Pls
1530 1180 Pls
1695 1278 Pls
1057 791 Pls
1687 1303 Pls
1142 858 Pls
1528 1170 Pls
972 740 Pls
1926 1452 Pls
993 755 Pls
1374 1021 Pls
1017 769 Pls
1305 951 Pls
1240 910 Pls
1041 784 Pls
1099 821 Pls
1049 790 Pls
976 751 Pls
1035 778 Pls
1096 828 Pls
1100 831 Pls
1200 935 Pls
3258 2483 Pls
1609 1254 Pls
1012 769 Pls
5392 4481 Pls
1187 870 Pls
3495 2584 Pls
1456 1037 Pls
2416 1829 Pls
1271 947 Pls
1007 762 Pls
965 735 Pls
962 734 Pls
1055 790 Pls
1130 809 Pls
1111 835 Pls
1069 831 Pls
1068 805 Pls
1139 849 Pls
1081 815 Pls
2053 1537 Pls
1117 841 Pls
1283 941 Pls
1065 800 Pls
1663 1255 Pls
969 739 Pls
1680 1283 Pls
1154 870 Pls
2444 1795 Pls
972 759 Pls
1145 852 Pls
1251 934 Pls
968 737 Pls
1750 1372 Pls
1825 1372 Pls
1062 807 Pls
997 757 Pls
1171 872 Pls
1042 790 Pls
1001 760 Pls
2085 1565 Pls
1732 1314 Pls
1047 784 Pls
1040 793 Pls
1273 959 Pls
1027 774 Pls
1228 937 Pls
1133 854 Pls
1536 1139 Pls
1012 765 Pls
1048 792 Pls
1065 795 Pls
1027 774 Pls
1337 983 Pls
1284 982 Pls
3026 2114 Pls
1185 896 Pls
1027 784 Pls
1002 757 Pls
1681 1243 Pls
1844 1401 Pls
1119 847 Pls
1229 931 Pls
1189 881 Pls
1233 961 Pls
1073 804 Pls
1035 777 Pls
1062 798 Pls
1117 830 Pls
980 744 Pls
1045 786 Pls
1041 780 Pls
1039 780 Pls
1028 780 Pls
1256 936 Pls
1058 796 Pls
971 737 Pls
1156 916 Pls
1039 783 Pls
1572 1153 Pls
1040 817 Pls
1076 799 Pls
2489 1899 Pls
1111 841 Pls
1242 910 Pls
1055 796 Pls
1820 1366 Pls
1037 781 Pls
2013 1472 Pls
980 743 Pls
1070 805 Pls
1084 812 Pls
1525 1112 Pls
1041 784 Pls
1375 1024 Pls
1524 1140 Pls
1086 802 Pls
1348 1003 Pls
1101 832 Pls
1309 942 Pls
1065 811 Pls
1244 928 Pls
5013 3678 Pls
986 749 Pls
1263 939 Pls
1187 872 Pls
1398 1025 Pls
1073 806 Pls
1107 826 Pls
975 742 Pls
1154 863 Pls
998 768 Pls
1666 1220 Pls
1140 853 Pls
999 757 Pls
5909 4613 Pls
1000 756 Pls
1096 830 Pls
1159 871 Pls
1271 952 Pls
1105 826 Pls
1018 771 Pls
1234 918 Pls
986 749 Pls
1339 1003 Pls
1255 919 Pls
1127 843 Pls
1161 873 Pls
2144 1589 Pls
2080 1588 Pls
1004 763 Pls
1133 865 Pls
1169 872 Pls
1153 890 Pls
1005 759 Pls
1018 767 Pls
1037 779 Pls
976 742 Pls
1084 818 Pls
1046 793 Pls
997 757 Pls
1080 809 Pls
1082 818 Pls
1057 804 Pls
1070 805 Pls
1154 859 Pls
1097 817 Pls
2144 1613 Pls
1245 929 Pls
1367 1013 Pls
1038 786 Pls
994 758 Pls
956 730 Pls
1028 773 Pls
1351 1012 Pls
1445 1073 Pls
1735 1298 Pls
1246 936 Pls
1191 868 Pls
1005 764 Pls
1027 793 Pls
1046 784 Pls
2097 1659 Pls
1587 1159 Pls
980 742 Pls
971 740 Pls
1130 841 Pls
1356 991 Pls
1032 789 Pls
1251 920 Pls
1526 1074 Pls
1208 887 Pls
1409 1032 Pls
1085 817 Pls
1125 852 Pls
1518 1137 Pls
2024 1625 Pls
1220 944 Pls
1420 1083 Pls
1390 1039 Pls
1171 899 Pls
1071 812 Pls
1333 1007 Pls
1037 775 Pls
1447 1029 Pls
1312 1013 Pls
1714 1275 Pls
1307 979 Pls
2066 1544 Pls
1192 883 Pls
1220 946 Pls
1440 1075 Pls
1887 1447 Pls
1402 1017 Pls
1261 955 Pls
1192 890 Pls
1348 1009 Pls
1123 848 Pls
1018 769 Pls
986 745 Pls
1308 965 Pls
1181 884 Pls
1300 970 Pls
1053 795 Pls
1548 1098 Pls
1038 781 Pls
1124 845 Pls
1356 1009 Pls
1743 1275 Pls
987 750 Pls
1042 788 Pls
1024 779 Pls
986 744 Pls
1467 1155 Pls
1017 770 Pls
1154 853 Pls
1018 773 Pls
1066 811 Pls
1319 1039 Pls
1450 1076 Pls
1585 1209 Pls
3735 2837 Pls
1621 1138 Pls
1162 885 Pls
1064 800 Pls
1290 1104 Pls
1922 1798 Pls
1099 821 Pls
1751 1598 Pls
1141 854 Pls
1277 1111 Pls
1035 788 Pls
1420 1049 Pls
1175 870 Pls
1405 1070 Pls
1427 1068 Pls
1077 812 Pls
1194 891 Pls
1268 937 Pls
1199 967 Pls
1146 853 Pls
1129 835 Pls
953 728 Pls
1096 837 Pls
1181 880 Pls
1023 771 Pls
1104 833 Pls
1045 787 Pls
1041 784 Pls
1357 995 Pls
989 752 Pls
1267 944 Pls
997 758 Pls
996 759 Pls
1614 1252 Pls
984 746 Pls
980 745 Pls
997 753 Pls
976 742 Pls
1027 781 Pls
1417 1080 Pls
1451 1084 Pls
2224 1769 Pls
1982 1538 Pls
1341 961 Pls
1041 788 Pls
1019 772 Pls
1072 806 Pls
1326 981 Pls
1171 886 Pls
1189 882 Pls
1474 1110 Pls
1051 786 Pls
1214 905 Pls
1010 764 Pls
1580 1147 Pls
1161 874 Pls
1137 851 Pls
1113 817 Pls
1318 986 Pls
1580 1192 Pls
1938 1566 Pls
1186 877 Pls
1095 826 Pls
1446 1129 Pls
1006 761 Pls
1526 1099 Pls
4195 3012 Pls
1054 793 Pls
1403 1068 Pls
1070 811 Pls
1067 802 Pls
1035 781 Pls
1268 929 Pls
1104 827 Pls
1064 805 Pls
1299 945 Pls
1003 759 Pls
1123 838 Pls
1549 1141 Pls
1055 794 Pls
1405 1047 Pls
1384 1042 Pls
1412 1029 Pls
1301 963 Pls
1102 827 Pls
1107 832 Pls
1383 1004 Pls
1085 815 Pls
1056 826 Pls
972 739 Pls
1032 791 Pls
1150 841 Pls
971 738 Pls
1467 1130 Pls
1084 819 Pls
1026 782 Pls
1143 862 Pls
1284 952 Pls
1083 817 Pls
996 755 Pls
1212 889 Pls
2166 1611 Pls
1123 836 Pls
3214 2519 Pls
1022 777 Pls
1193 875 Pls
967 738 Pls
1052 788 Pls
1056 796 Pls
1054 791 Pls
986 750 Pls
964 742 Pls
1051 790 Pls
1060 792 Pls
1391 1032 Pls
1005 766 Pls
1656 1242 Pls
1547 1112 Pls
1077 813 Pls
1404 1057 Pls
1021 774 Pls
1348 987 Pls
1782 1288 Pls
1806 1359 Pls
1088 824 Pls
1265 1057 Pls
1540 1127 Pls
1230 1008 Pls
1026 775 Pls
1578 1202 Pls
1339 1018 Pls
1435 1079 Pls
2387 1701 Pls
2308 1695 Pls
4911 3964 Pls
1758 1440 Pls
1268 947 Pls
1235 922 Pls
3020 2312 Pls
2225 1637 Pls
1275 956 Pls
1229 913 Pls
1700 1268 Pls
2212 1692 Pls
1241 928 Pls
1209 911 Pls
1132 842 Pls
1041 781 Pls
1182 896 Pls
1565 1153 Pls
1361 1052 Pls
2105 1689 Pls
984 746 Pls
1110 823 Pls
1117 839 Pls
1012 763 Pls
1048 784 Pls
1047 785 Pls
1027 772 Pls
1136 835 Pls
1649 1224 Pls
1010 769 Pls
1006 759 Pls
976 753 Pls
1251 927 Pls
1405 1095 Pls
1014 795 Pls
1207 901 Pls
1323 994 Pls
1114 843 Pls
1052 806 Pls
1406 1155 Pls
1060 798 Pls
1357 1002 Pls
970 737 Pls
1084 825 Pls
1048 800 Pls
1145 850 Pls
997 753 Pls
969 738 Pls
1033 782 Pls
1062 805 Pls
1362 976 Pls
2943 2272 Pls
1288 960 Pls
1627 1198 Pls
1765 1253 Pls
1323 969 Pls
1026 794 Pls
964 735 Pls
961 732 Pls
1978 1418 Pls
1541 1176 Pls
1074 809 Pls
1537 1155 Pls
4472 3412 Pls
1590 1200 Pls
1084 823 Pls
1078 804 Pls
979 747 Pls
1030 777 Pls
1129 846 Pls
1048 788 Pls
1404 1028 Pls
1009 764 Pls
1085 814 Pls
1052 795 Pls
982 747 Pls
986 750 Pls
1231 925 Pls
997 759 Pls
1543 1161 Pls
1565 1152 Pls
1202 884 Pls
1668 1251 Pls
1053 791 Pls
1305 971 Pls
1037 794 Pls
1313 979 Pls
998 754 Pls
1016 777 Pls
995 752 Pls
1227 895 Pls
1608 1203 Pls
1009 762 Pls
1229 940 Pls
1066 798 Pls
1060 795 Pls
1381 1081 Pls
1037 798 Pls
1090 833 Pls
1488 1124 Pls
1196 873 Pls
959 732 Pls
2035 1468 Pls
979 744 Pls
1029 771 Pls
970 739 Pls
4026 3012 Pls
979 746 Pls
1205 898 Pls
1121 842 Pls
2181 1689 Pls
1076 801 Pls
1243 952 Pls
1240 930 Pls
990 754 Pls
1373 995 Pls
1093 820 Pls
1450 982 Pls
1333 983 Pls
1392 1025 Pls
1074 802 Pls
1081 813 Pls
1294 975 Pls
1102 818 Pls
1124 846 Pls
1124 839 Pls
1489 1123 Pls
1061 803 Pls
1020 777 Pls
986 754 Pls
2286 1710 Pls
1178 878 Pls
1914 1425 Pls
982 749 Pls
1504 1085 Pls
1130 846 Pls
1008 762 Pls
1102 818 Pls
1374 1046 Pls
1115 818 Pls
1481 1084 Pls
1080 810 Pls
966 735 Pls
1253 940 Pls
1197 896 Pls
1567 1198 Pls
1297 956 Pls
1388 1041 Pls
1008 768 Pls
1316 973 Pls
1144 868 Pls
1404 1037 Pls
1083 811 Pls
1066 802 Pls
1821 1466 Pls
1109 840 Pls
1260 949 Pls
1181 869 Pls
1211 913 Pls
1661 1202 Pls
1004 762 Pls
2324 1881 Pls
1321 982 Pls
1736 1266 Pls
1270 897 Pls
1301 989 Pls
1430 1070 Pls
1316 986 Pls
1763 1321 Pls
1054 795 Pls
2029 1539 Pls
1041 780 Pls
1263 933 Pls
1246 921 Pls
1157 856 Pls
978 743 Pls
962 734 Pls
1190 887 Pls
1027 763 Pls
1283 929 Pls
1026 781 Pls
1290 956 Pls
1052 796 Pls
1060 799 Pls
1044 790 Pls
1237 938 Pls
1134 844 Pls
1038 786 Pls
1488 1102 Pls
1857 1406 Pls
1029 778 Pls
1274 941 Pls
963 737 Pls
1038 789 Pls
1218 914 Pls
1816 1375 Pls
1266 928 Pls
1170 872 Pls
1154 876 Pls
1170 879 Pls
1237 925 Pls
1055 791 Pls
3940 3097 Pls
1598 1163 Pls
1011 764 Pls
1100 828 Pls
1103 820 Pls
1175 886 Pls
1040 775 Pls
1317 929 Pls
1141 848 Pls
1495 1133 Pls
1100 822 Pls
1082 805 Pls
1043 790 Pls
1079 810 Pls
1162 868 Pls
1188 896 Pls
1212 907 Pls
1621 1192 Pls
1316 997 Pls
1191 862 Pls
1324 995 Pls
1461 1089 Pls
1164 879 Pls
1039 789 Pls
1116 834 Pls
1518 1076 Pls
1014 770 Pls
972 739 Pls
964 734 Pls
1005 762 Pls
982 751 Pls
1277 964 Pls
1850 1396 Pls
999 759 Pls
1033 782 Pls
1204 908 Pls
1009 763 Pls
1150 858 Pls
2228 1561 Pls
1130 837 Pls
1003 756 Pls
1317 978 Pls
1350 992 Pls
1270 951 Pls
1304 956 Pls
1111 828 Pls
1317 972 Pls
982 747 Pls
1609 1210 Pls
2138 1670 Pls
2350 1771 Pls
1096 827 Pls
2509 1985 Pls
2347 1768 Pls
1171 871 Pls
1079 805 Pls
1939 1560 Pls
1030 780 Pls
963 736 Pls
1055 797 Pls
1004 763 Pls
1068 794 Pls
1557 1252 Pls
1089 815 Pls
1358 995 Pls
1136 847 Pls
1163 855 Pls
1237 920 Pls
1254 925 Pls
1208 892 Pls
1640 1230 Pls
1865 1352 Pls
1121 847 Pls
3479 2568 Pls
1101 835 Pls
1041 788 Pls
1006 760 Pls
1010 761 Pls
973 740 Pls
1062 799 Pls
990 749 Pls
1895 1602 Pls
1460 1083 Pls
1119 827 Pls
1089 817 Pls
976 743 Pls
1117 840 Pls
1031 775 Pls
974 741 Pls
1134 825 Pls
2189 1759 Pls
1106 830 Pls
1145 854 Pls
1225 918 Pls
1218 904 Pls
1011 765 Pls
1208 904 Pls
1383 1044 Pls
992 751 Pls
958 731 Pls
1066 802 Pls
1873 1389 Pls
992 749 Pls
1063 793 Pls
1004 761 Pls
1898 1416 Pls
1222 914 Pls
1242 930 Pls
1178 881 Pls
1210 900 Pls
1088 824 Pls
1109 801 Pls
1111 836 Pls
1576 1089 Pls
949 725 Pls
1041 785 Pls
1362 1019 Pls
1224 913 Pls
965 736 Pls
1242 931 Pls
1816 1307 Pls
1387 1032 Pls
1120 822 Pls
1233 903 Pls
1479 857 Pls
1160 794 Pls
1699 1263 Pls
1185 889 Pls
1080 811 Pls
1083 828 Pls
1219 903 Pls
1023 770 Pls
1995 1468 Pls
1013 762 Pls
979 751 Pls
1113 825 Pls
1549 1140 Pls
1005 761 Pls
1062 800 Pls
1145 850 Pls
1630 1204 Pls
1432 1038 Pls
995 752 Pls
2629 1961 Pls
1421 1087 Pls
1167 862 Pls
1294 953 Pls
1025 775 Pls
1062 816 Pls
1441 1067 Pls
1265 889 Pls
1200 905 Pls
1285 967 Pls
997 755 Pls
1225 943 Pls
1159 861 Pls
1043 791 Pls
1122 839 Pls
1057 798 Pls
1047 786 Pls
3329 2574 Pls
2218 1593 Pls
1109 836 Pls
1073 809 Pls
951 726 Pls
1302 969 Pls
1110 825 Pls
1224 900 Pls
1243 896 Pls
1827 1323 Pls
979 744 Pls
1039 788 Pls
1313 980 Pls
1075 811 Pls
1459 1078 Pls
1121 840 Pls
2098 1591 Pls
1545 1161 Pls
978 742 Pls
1057 792 Pls
995 764 Pls
1405 1048 Pls
1189 873 Pls
1194 888 Pls
1083 816 Pls
1041 796 Pls
1090 830 Pls
1223 905 Pls
1431 1038 Pls
1018 772 Pls
998 757 Pls
1375 1030 Pls
2351 1784 Pls
1225 904 Pls
1506 1125 Pls
1184 891 Pls
1349 990 Pls
989 750 Pls
967 735 Pls
1048 786 Pls
1021 770 Pls
1556 1136 Pls
1762 1256 Pls
1006 765 Pls
1209 909 Pls
1308 973 Pls
1153 860 Pls
6182 4533 Pls
1071 802 Pls
1305 981 Pls
1243 912 Pls
1954 1529 Pls
2454 1882 Pls
1206 885 Pls
1515 1102 Pls
2908 2238 Pls
1032 777 Pls
959 731 Pls
1358 971 Pls
1010 762 Pls
992 759 Pls
1301 974 Pls
1999 1643 Pls
1184 889 Pls
1579 1153 Pls
1023 779 Pls
1079 820 Pls
1000 753 Pls
1702 1432 Pls
1108 815 Pls
968 738 Pls
1299 961 Pls
1634 1471 Pls
1022 768 Pls
2512 1913 Pls
1182 888 Pls
1615 1205 Pls
1110 853 Pls
1711 1243 Pls
1150 866 Pls
1033 780 Pls
1181 884 Pls
1021 781 Pls
1225 914 Pls
951 726 Pls
2683 2072 Pls
1382 1018 Pls
1396 1026 Pls
1075 811 Pls
1238 922 Pls
1190 878 Pls
1205 879 Pls
1804 1304 Pls
991 752 Pls
1305 1000 Pls
1007 767 Pls
1017 769 Pls
1106 820 Pls
1015 768 Pls
1067 806 Pls
1090 806 Pls
6243 4602 Pls
1.000 UL
LTb
946 4775 N
946 704 L
5857 0 V
0 4071 V
-5857 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
